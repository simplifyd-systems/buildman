FROM node:{{ .NodeVersion }}-alpine AS base

{{ .ArgsPlaceholder }}



# Install dependencies only when needed
FROM base AS deps

{{ .ArgsPlaceholder }}

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi




# Rebuild the source code only when needed
FROM base AS builder

{{ .ArgsPlaceholder }}

WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
ENV NEXT_TELEMETRY_DISABLED 1

RUN \
  if [ -f yarn.lock ]; then yarn run build; \
  elif [ -f package-lock.json ]; then npm run build; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build; \
  else echo "Lockfile not found." && exit 1; \
  fi




# production environment
FROM nginxinc/nginx-unprivileged:stable-alpine

{{ .ArgsPlaceholder }}

RUN printf "server {\n\
    listen ${PORT} default_server;\n\
    listen [::]:${PORT} default_server;\n\
    root /usr/share/nginx/html;\n\
    try_files \$uri \$uri/ /index.html;\n\
}\n"\
> /etc/nginx/conf.d/default.conf

RUN cat /etc/nginx/conf.d/default.conf

COPY --from=builder /app/{{ .OutputDir }} /usr/share/nginx/html
EXPOSE $PORT
CMD ["nginx", "-g", "daemon off;"]

